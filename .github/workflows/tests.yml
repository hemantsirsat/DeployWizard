name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']
      fail-fast: false

    services:
      # Add a service for Docker in Docker
      docker:
        image: docker:dind
        options: --privileged

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Set up Docker Compose
      run: |
        mkdir -p ~/.docker/cli-plugins/
        curl -SL https://github.com/docker/compose/releases/latest/download/docker-compose-linux-x86_64 -o ~/.docker/cli-plugins/docker-compose
        chmod +x ~/.docker/cli-plugins/docker-compose
        docker compose version
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgl1
    
    - name: Install package and test dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[test]"  # Install with test dependencies
        # Install ML frameworks with versions compatible with our test models
        pip install torch>=1.9.0,<3.0.0 --index-url https://download.pytorch.org/whl/cpu
        pip install tensorflow-cpu>=2.6.0,<3.0.0
        pip install scikit-learn>=1.3.0,<2.0.0
        pip install importlib-resources
    
    - name: Verify Docker
      run: |
        docker --version
        docker compose version
        docker info
    
    - name: Run tests with coverage
      timeout-minutes: 15
      run: |
        python -m pytest -v --cov=deploywizard --cov-report=xml -k "not test_end_to_end_workflow"
    
    - name: Run end-to-end tests
      timeout-minutes: 15
      run: |
        python -m pytest -v tests/test_readme_examples.py::test_end_to_end_workflow
    
    - name: Upload coverage to Codecov
      if: success() || failure()
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
